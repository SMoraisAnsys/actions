name: "Build a Python library"
description: "Build a Python library by generating wheels and sdist artifacts"

inputs:
  library-name:
    description: 'Name of the Python library'
    required: true
    type: string
  python-version:
    description: 'Desired Python version for pre-commit'
    default: '3.10'
    required: false
    type: string

runs:
  using: "composite"
  steps:
  
    - name: "Install Git and clone project"
      uses: actions/checkout@v3
  
    - name: "Setup Python"
      uses: actions/setup-python@v4.2.0
      with:
        python-version: ${{ inputs.python-version }}

    - name: "Check if requirements_build.txt file exists"
      shell: bash
      run: |
        echo "EXISTS_BUILD_REQUIREMENTS=$(if [ -f requirements/requirements_build.txt ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

    - name: "Install build dependencies from requirements file"
      if: env.EXISTS_BUILD_REQUIREMENTS == 'true'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements/requirements_build.txt

    - name: "Install build dependencies from pyproject.toml"
      if: env.EXISTS_BUILD_REQUIREMENTS == 'false' 
      shell: bash 
      run: python -m pip install .[build]

    - name: "Build distribution artifacts and check their health"
      shell: bash
      run: |
        python -m build && python -m twine check dist/*

    - name: "Upload distribution artifacts to GitHub artifacts"
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ${{ inputs.library-name }}-artifacts
        path: dist/
        retention-days: 7
